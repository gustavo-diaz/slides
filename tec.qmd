---
format:
  revealjs:
    embed-resources: true
    slide-number: true
---

::: {style="text-align: center"}
## Improving List Experiments {.center .smaller}

&nbsp;


**Gustavo Diaz**  
McMaster University  
[gustavodiaz.org](https://gustavodiaz.org/)  
<diazg2@mcmaster.ca>

&nbsp;

Slides: [talks.gustavodiaz.org/tec](https://talks.gustavodiaz.org/tec.html)

:::


```{r include=FALSE}
library(knitr)

opts_chunk$set(fig.pos = "center", echo = FALSE, 
               message = FALSE, warning = FALSE)
```

```{r setup}
# Packages
library(tidyverse)
library(DeclareDesign)
library(kableExtra)
library(ggh4x) # nested facets


# ggplot global options
theme_set(theme_gray(base_size = 20))
```

# Research Agenda

## Bias-variance tradeoff as darts

![](list/darts.png){fig-align="center"}

## But the game of darts is more complicated

::: columns
::: {.column width="50%"}
![](list/darts_board.png)
:::

::: {.column width="50%"}
![](list/darts_scoring.png){fig-align="center" width="72%" height="72%"}
:::
:::


## Two types of tradeoffs

::: incremental

1. **Explicit:** Is a little bias worth the increase in precision?

2. **Implicit:** Improving precision without sacrificing unbiasedness? 
:::

## Two types of tradeoffs {visibility="uncounted"}

1. [**Explicit:** Is a little bias worth the increase in precision?]{style="color: gray;"}

2. [**Implicit:** Improving precision without sacrificing unbiasedness?]{style="color: red;"}

# List Experiments

## Example

![](list/personhood_0.png){.absolute top=60 left=0 height="80%"}

. . .

![](list/personhood_1.png){.absolute top=150 left=200}

::: aside
Source: [NPR](https://www.npr.org/sections/itsallpolitics/2011/11/08/142159280/mississippi-voters-reject-personhood-amendment)
:::

## List experiment

Here is a list of things that some people have done. 

::: aside
Source: [Rosenfeld et al (2016)](https://doi.org/10.1111/ajps.12205)
:::

## List experiment {visibility="uncounted"}

Please listen to them and then tell me HOW MANY of them you have done in the past two years. 

::: aside
Source: [Rosenfeld et al (2016)](https://doi.org/10.1111/ajps.12205)
:::

## List experiment {visibility="uncounted"}

Do not tell me which ones. Just tell me HOW MANY:

::: aside
Source: [Rosenfeld et al (2016)](https://doi.org/10.1111/ajps.12205)
:::

. . .

&nbsp;

### Control group

1. Discussed politics with family or friends
2. Cast a ballot for governor Phil Bryant
3. Paid dues to a union
4. Given money to a Tea Party candidate

## List experiment {visibility="uncounted"}

Do not tell me which ones. Just tell me HOW MANY:

::: aside
Source: [Rosenfeld et al (2016)](https://doi.org/10.1111/ajps.12205)
:::

&nbsp;

### Treatment group

1. Discussed politics with family or friends
2. Cast a ballot for governor Phil Bryant
3. Paid dues to a union
4. Given money to a Tea Party candidate

## List experiment {visibility="uncounted"}

Do not tell me which ones. Just tell me HOW MANY:

::: aside
Source: [Rosenfeld et al (2016)](https://doi.org/10.1111/ajps.12205)
:::

&nbsp;

### Treatment group

1. Discussed politics with family or friends
2. Cast a ballot for governor Phil Bryant
3. Paid dues to a union
4. Given money to a Tea Party candidate
5. **Voted "YES" on the Personhood Initiative**


## Prevalence rate

$$
\text{Proportion(Voted yes)} =\\ \text{Mean(List with sensitive item)} -\\ \text{Mean(List without sensitive item)}
$$

. . .

- We get a **prevalence rate estimate**

. . .

- But we **do not know** how individual respondents voted!

## Compare with direct question

Did you vote YES or NO on the Personhood Initiative, which appeared on the November 2011 Mississippi General Election Ballot?

. . .


$$
\text{Proportion(Voted yes)} =\\ \text{Mean(Voted yes)}
$$


## Validation

```{r}
# got this through
# https://automeris.io/WebPlotDigitizer/
# And by reverse engineering table 1
# Because replication data was not available
# So this has some human error
validation = data.frame(
  technique = c("Direct question", "List experiment"),
  estimate = c(0.396, 0.487),
  upper = c(0.419, 0.562),
  lower = c(0.376, 0.417)
)

actual_vote = 0.65

ggplot(validation) +
  aes(x = technique, y = estimate) +
  geom_point(size = 4, alpha = 0) + 
  geom_linerange(aes(x = technique, ymin = lower, ymax = upper),
                 linewidth = 1, alpha = 0) +
  ylim(0.2, 0.8) +
  labs(x = "Technique", 
       y = "Estimated proportion of 'No' votes")
```

::: aside
Adapted from [Rosenfeld et al (2016)](https://doi.org/10.1111/ajps.12205)
:::

## Validation {visibility="uncounted"}

```{r}
ggplot(validation) +
  aes(x = technique, y = estimate) +
  geom_hline(yintercept = actual_vote, 
             linetype = "dashed",
             linewidth = 1) +
  geom_point(size = 4, alpha = 0) + 
  geom_linerange(aes(x = technique, ymin = lower, ymax = upper),
                 linewidth = 1, alpha = 0) +
  annotate("text", x = 0.7, y = 0.7, size = 5, 
           label = "Actual vote share") +
  ylim(0.2, 0.8) +
  labs(x = "Technique", 
       y = "Estimated proportion of 'No' votes")
```

::: aside
Adapted from [Rosenfeld et al (2016)](https://doi.org/10.1111/ajps.12205)
:::


## Validation {visibility="uncounted"}

```{r}
ggplot(validation) +
  aes(x = technique, y = estimate) +
  geom_hline(yintercept = actual_vote, 
             linetype = "dashed",
             linewidth = 1) +
  geom_point(size = 4) + 
  geom_linerange(aes(x = technique, ymin = lower, ymax = upper),
                 linewidth = 1, alpha = 0) +
  annotate("text", x = 0.7, y = 0.7, size = 5, 
           label = "Actual vote share") +
  ylim(0.2, 0.8) +
  labs(x = "Technique", 
       y = "Estimated proportion of 'No' votes")
```

::: aside
Adapted from [Rosenfeld et al (2016)](https://doi.org/10.1111/ajps.12205)
:::


## Validation {visibility="uncounted"}

```{r}
ggplot(validation) +
  aes(x = technique, y = estimate) +
  geom_hline(yintercept = actual_vote, 
             linetype = "dashed",
             linewidth = 1) +
  geom_point(size = 4) + 
  geom_linerange(aes(x = technique, ymin = lower, ymax = upper),
                 linewidth = 1) +
  annotate("text", x = 0.7, y = 0.7, size = 5, 
           label = "Actual vote share") +
  ylim(0.2, 0.8) +
  labs(x = "Technique", 
       y = "Estimated proportion of 'No' votes")
```

::: aside
Adapted from [Rosenfeld et al (2016)](https://doi.org/10.1111/ajps.12205)
:::

::: {style="text-align: center"}
## Sensitivity bias reduction not always worth the increased variance {.center background-color="#00b176"}
:::

::: {style="text-align: center"}
## Can we do better? {.center background-color="#00b176"}
:::

# Double list experiments

## Example {.smaller}

**List A**

- Californians for Disability (advocating for people with disabilities)
- California National Organization for Women (advocating for women's equality and empowerment)
- American Family Association (advocating for pro-family values)
- American Red Cross (humanitarian organization)

**List B**

- American Legion (veterans service organization)
- Equality California (gay and lesbian advocacy organization)
- Tea Party Patriots (conservative group supporting lower taxes and limited government)
- Salvation Army (charitable organization)

::: aside
Source: [Alvarez et al (2019)](https://doi.org/10.1017/pan.2018.57)
:::

## Sensitive item

**Organization X (advocating for immigration reduction and measures against undocumented immigration)**

::: incremental
- Randomly appears in list A or B

- **Single list:** Half of the respondents see sensitive item

- **Double list:** Everyone sees it

- Equivalent to two parallel list experiments

:::

## Three prevalence estimators

$$
\hat{\tau}_A = \text{Mean}(A_t) - \text{Mean}(A_c)
$$

. . .

$$
\hat{\tau}_B = \text{Mean}(B_t) - \text{Mean}(B_c)
$$

. . .


$$
\hat{\tau}_{Pooled} = (\hat{\tau}_A + \hat{\tau}_B)/2
$$ 

::: aside
See [Diaz (2023)](https://doi.org/10.1017/XPS.2023.24) and [Miller (1984)](https://www.proquest.com/docview/303296717) for details
:::

## DLE yields more precise estimates

```{r}
# Data prep
load("list/attn_rep.RData")

cali = dle

remove(dle)

# Analysis
a = cali %>% 
  split(.$experiment) %>% 
  map(~difference_in_means(listA ~ trt_A, data = .)) %>% 
  map(tidy) %>% 
  bind_rows(.id = "experiment")

b = cali %>% 
  split(.$experiment) %>% 
  map(~difference_in_means(listB ~ trt_B, data = .)) %>% 
  map(tidy) %>% 
  bind_rows(.id = "experiment")

pool = cali %>% 
  mutate(id = row_number()) %>% 
  pivot_longer(cols = c(listA, listB)) %>% 
  rename(list = name, count = value) %>% 
  mutate(Z = ifelse(trt_A == 1 & list == "listA" | trt_B == 1 & list == "listB",
                    1, 0)) %>% 
  split(.$experiment) %>% 
  map(~ lm_robust(count ~ Z + list, clusters = id, se_type = "stata", data = .)) %>% 
  map(tidy) %>% 
  bind_rows(.id = "experiment") %>% 
  filter(term == "Z")
  
est_df = rbind(a, b, pool)

est_df$term = fct_relevel(est_df$term, "trt_A", "trt_B", "Z")
```

```{r}
ggplot(est_df %>% filter(experiment == "X")) +
  aes(x = term, y = estimate, shape = term) +
  geom_hline(yintercept = 0, linetype = "dashed") + 
  geom_point(size = 4, position = position_dodge(width = 0.5), alpha = 0) +
  geom_linerange(aes(x = term, ymin = conf.low, ymax = conf.high), 
                 size = 1, position = position_dodge(width = 0.5), alpha = 0) +
  theme(legend.position = "none") +
  labs(subtitle = "Organization X (advocacy group for immigration reduction)",
       x = "Estimator", 
       y = "Proportion support") +
  scale_x_discrete(labels = c("List A", "List B", "Pooled"))
```

::: aside
Adapted from [Diaz (2023)](https://doi.org/10.1017/XPS.2023.24)
:::

## DLE yields more precise estimates {visibility="uncounted"}

```{r}
ggplot(est_df %>% filter(experiment == "X")) +
  aes(x = term, y = estimate, shape = term) +
  geom_hline(yintercept = 0, linetype = "dashed") + 
  geom_point(size = 4, position = position_dodge(width = 0.5)) +
  geom_linerange(aes(x = term, ymin = conf.low, ymax = conf.high), 
                 size = 1, position = position_dodge(width = 0.5)) +
  theme(legend.position = "none") +
  labs(subtitle = "Organization X (advocacy group for immigration reduction)", 
       x = "Estimator", 
       y = "Proportion support") +
  scale_x_discrete(labels = c("List A", "List B", "Pooled"))
```

::: aside
Adapted from [Diaz (2023)](https://doi.org/10.1017/XPS.2023.24)
:::

## But variance reduction is not free

::: incremental
- Baseline lists need to be comparable

- Easiest way is to use *paired items* 

- American Family Association (A) $\approx$ Tea Party Patriots (B)

- **BUT** that makes it easier to spot the *sensitive item*
:::

## Different baseline estimates

```{r}
ggplot(est_df %>% filter(experiment == "Y")) +
  aes(x = term, y = estimate, shape = term) +
  geom_hline(yintercept = 0, linetype = "dashed") + 
  geom_point(size = 4, position = position_dodge(width = 0.5), alpha = 0) +
  geom_linerange(aes(x = term, ymin = conf.low, ymax = conf.high), 
                 size = 1, position = position_dodge(width = 0.5), alpha = 0) +
  theme(legend.position = "none") +
  labs(subtitle = "Organization Y (citizen border patrol)", 
       x = "Estimator", 
       y = "Proportion support") +
  scale_x_discrete(labels = c("List A", "List B", "Pooled"))
```

::: aside
Adapted from [Diaz (2023)](https://doi.org/10.1017/XPS.2023.24)
:::


## Different baseline estimates {visibility="uncounted"}

```{r}
ggplot(est_df %>% filter(experiment == "Y")) +
  aes(x = term, y = estimate, shape = term) +
  geom_hline(yintercept = 0, linetype = "dashed") + 
  geom_point(size = 4, position = position_dodge(width = 0.5)) +
  geom_linerange(aes(x = term, ymin = conf.low, ymax = conf.high), 
                 size = 1, position = position_dodge(width = 0.5)) +
  theme(legend.position = "none") +
  labs(subtitle = "Organization Y (citizen border patrol)", 
       x = "Estimator", 
       y = "Proportion support") +
  scale_x_discrete(labels = c("List A", "List B", "Pooled"))
```

::: aside
Adapted from [Diaz (2023)](https://doi.org/10.1017/XPS.2023.24)
:::

## DLE variants

. . .

```{r}
designs = data.frame(
  expand.grid(
    Lists = c("Fixed", "Randomized"),
    Sensitive_item = c("Fixed", "Randomized")
  )
)

colnames(designs) = c("List order", "Sensitive item location")

designs %>% 
  kbl(escape = FALSE,
      align = "cc")
```

## DLE variants {visibility="uncounted"}

```{r}
designs = data.frame(
  expand.grid(
    Lists = c("Fixed", "Randomized"),
    Sensitive_item = c("Fixed", "Randomized")
  )
)

colnames(designs) = c("List order", "Sensitive item location")

designs %>% 
  kbl(escape = FALSE,
      align = "cc") %>% 
  row_spec(1, strikeout = TRUE, color = "gray")
```

- **Fixed-fixed** is *not* an admissible design

## DLE variants {visibility="uncounted"}

```{r}
designs = data.frame(
  expand.grid(
    Lists = c("Fixed", "Randomized"),
    Sensitive_item = c("Fixed", "Randomized")
  )
)

colnames(designs) = c("List order", "Sensitive item location")

designs %>% 
  kbl(escape = FALSE,
      align = "cc") %>% 
  row_spec(1, strikeout = TRUE, color = "gray") %>% 
  row_spec(2, bold = TRUE)
```

- **Fixed-fixed** is *not* an admissible design
- **Randomized-fixed** keeps sensitive item in second list

## DLE variants {visibility="uncounted"}

```{r}
designs = data.frame(
  expand.grid(
    Lists = c("Fixed", "Randomized"),
    Sensitive_item = c("Fixed", "Randomized")
  )
)

colnames(designs) = c("List order", "Sensitive item location")

designs %>% 
  kbl(escape = FALSE,
      align = "cc") %>% 
  row_spec(1, strikeout = TRUE, color = "gray") %>% 
  row_spec(2, strikeout = TRUE, color = "gray")
```

- **Fixed-fixed** is *not* an admissible design
- **Randomized-fixed** keeps sensitive item in second list

## DLE variants {visibility="uncounted"}

```{r}
designs = data.frame(
  expand.grid(
    Lists = c("Fixed", "Randomized"),
    Sensitive_item = c("Fixed", "Randomized")
  )
)

colnames(designs) = c("List order", "Sensitive item location")

designs %>% 
  kbl(escape = FALSE,
      align = "cc") %>% 
  row_spec(1, strikeout = TRUE, color = "gray") %>% 
  row_spec(2, strikeout = TRUE, color = "gray") %>% 
  row_spec(3:4, bold = TRUE)
```

- **Fixed-fixed** is *not* an admissible design
- **Randomized-fixed** keeps sensitive item in second list
- **Fixed-randomized** and **randomized-randomized** *shuffle sensitive item order*

## Carryover design effects

::: {.callout-note}
## Design effect [(Blair and Imai 2012)](https://doi.org/10.1093/pan/mpr048)

The inclusion of a sensitive item affects how survey participants respond to the baseline items **within the list**.

:::

. . .

::: {.callout-tip}
## Carryover design effect

The inclusion of a sensitive item **in one list** affects how participants respond to the baseline items in **the other list**.
:::

## Toy example

```{r}
# Four cases
# Baseline (only once)
# Deflation
# Inflation
# Sensitive item

toy = data.frame(
  pot = c("Baseline", rep(c("Sensitive first", "Sensitive second"), 2)),
  Ya = c(2, 1, 2, 3, 2),
  Yb = c(2, 1, 1, 3, 3),
  zz = c(0, 0, 1, 0, -1)
)

colnames(toy) = c("Observed response",
                  "List 1",
                  "List 2",
                  "Difference")

toy %>% 
  kbl(escape = FALSE,
      align = "lcccc") %>% 
  pack_rows("Deflation", 2, 3, color = "white") %>% 
  pack_rows("Inflation", 4, 5, color = "white") %>%  
  column_spec(1, bold = c(T, F, F, F, F)) %>% 
  row_spec(1:5, color = "white")
```

## Toy example {visibility="uncounted"}

```{r}
toy %>% 
  kbl(escape = FALSE,
      align = "lcccc") %>% 
  pack_rows("Deflation", 2, 3, color = "white") %>% 
  pack_rows("Inflation", 4, 5, color = "white") %>%  
  column_spec(1, bold = c(T, F, F, F, F)) %>% 
  row_spec(2:5, color = "white")
```

## Toy example {visibility="uncounted"}

```{r}
toy %>% 
  kbl(escape = FALSE,
      align = "lcccc") %>% 
  pack_rows("Deflation", 2, 3) %>% 
  pack_rows("Inflation", 4, 5, color = "white") %>%  
  column_spec(1, bold = c(T, F, F, F, F)) %>% 
  row_spec(2:5, color = "white")
```

## Toy example {visibility="uncounted"}

```{r}
toy %>% 
  kbl(escape = FALSE,
      align = "lcccc") %>% 
  pack_rows("Deflation", 2, 3) %>% 
  pack_rows("Inflation", 4, 5, color = "white") %>%  
  column_spec(1, bold = c(T, F, F, F, F)) %>% 
  row_spec(3:5, color = "white")
```

## Toy example {visibility="uncounted"}

```{r}
toy %>% 
  kbl(escape = FALSE,
      align = "lcccc") %>% 
  pack_rows("Deflation", 2, 3) %>% 
  pack_rows("Inflation", 4, 5, color = "white") %>%  
  column_spec(1, bold = c(T, F, F, F, F)) %>% 
  row_spec(4:5, color = "white")
```

## Toy example {visibility="uncounted"}

```{r}
toy %>% 
  kbl(escape = FALSE,
      align = "lcccc") %>% 
  pack_rows("Deflation", 2, 3) %>% 
  pack_rows("Inflation", 4, 5) %>%  
  column_spec(1, bold = c(T, F, F, F, F)) %>% 
  row_spec(4:5, color = "white")
```

## Toy example {visibility="uncounted"}

```{r}
toy %>% 
  kbl(escape = FALSE,
      align = "lcccc") %>% 
  pack_rows("Deflation", 2, 3) %>% 
  pack_rows("Inflation", 4, 5) %>%  
  column_spec(1, bold = c(T, F, F, F, F)) %>% 
  row_spec(5, color = "white")
```

## Toy example {visibility="uncounted"}

```{r}
toy %>% 
  kbl(escape = FALSE,
      align = "lcccc") %>% 
  pack_rows("Deflation", 2, 3) %>% 
  pack_rows("Inflation", 4, 5) %>%  
  column_spec(1, bold = c(T, F, F, F, F))
```

## Why does this happen?

::: incremental
- Unique question format
- Lists usually appear close to each other
- Positively correlation across lists [(Glynn 2013)](https://doi.org/10.1093/poq/nfs070)
:::

## Statistical tests

::: incremental
- **Goal:** Detect *asymmetric shift* across *treatment schedules*

- Two tests: 

1. Difference-in-differences

2. Signed-rank test

:::

## Statistical tests {visibility="uncounted"}

<!-- Keep signed rank for appendix -->

- **Goal:** Detect *asymmetric shift* across *treatment schedules*

- Two tests: 

1. [**Difference-in-differences**]{style="color: red;"}

2. [Signed-rank test]{style="color: gray;"}

## Difference-in-differences test

$$
\hat{\tau}_1 = \text{Mean}(\text{First list}_t) - \text{Mean}(\text{First list}_c)
$$

$$
\hat{\tau}_2 = \text{Mean}(\text{Second list}_t) - \text{Mean}(\text{Second list}_c)
$$

::: incremental
- $H_0: \hat{\tau}_1 - \hat{\tau}_2 = 0$
- **Deflation:** $\hat{\tau}_1 - \hat{\tau}_2 < 0$
- **Inflation:** $\hat{\tau}_1 - \hat{\tau}_2 > 0$
- Calculate via regression or randomization inference
:::

## Application to [Alvarez et al (2019)](https://doi.org/10.1017/pan.2018.57)

```{r}
load("list/attn_tests.RData")

attn_tab = attn_tests %>% filter(is.na(m)) %>% mutate_at(2:4, round, 3) %>% select(!m) %>% 
  mutate(experiment = ifelse(experiment == "X", "Organization X (advocacy group)",
                             "Organization Y (border patrol)"))

colnames(attn_tab) = c("Experiment", "Statistic", "p-value")

attn_tab %>% 
  kbl(escape = FALSE,
      align = "lrr") %>% 
  row_spec(1:2, color = "white") %>% 
  column_spec(1, width = "8em")
```

## Application to [Alvarez et al (2019)](https://doi.org/10.1017/pan.2018.57) {visibility="uncounted"}

```{r}
attn_tab %>% 
  kbl(escape = FALSE,
      align = "lrr") %>% 
  row_spec(2, color = "white") %>% 
  column_spec(1, width = "8em")
```

## Application to [Alvarez et al (2019)](https://doi.org/10.1017/pan.2018.57) {visibility="uncounted"}

```{r}
attn_tab %>% 
  kbl(escape = FALSE,
      align = "lrr") %>% 
  column_spec(1, width = "8em")
```

::: {style="text-align: center"}
## Tests improve our ability to  choose baseline items for a DLE {.center background-color="#00b176"}
:::

::: {style="text-align: center"}
## They also help when other things go wrong {.center background-color="#00b176"}
:::

# Criminal Governance Tools in Uruguay


## Survey

- Facebook sample of Montevideo residents `(N = 2688)`

- Four criminal governance strategies

. . .

::: columns

::: {.column width="48%"}
### Negative
- Threaten neighbors
- Evict neighbors
:::

::: {.column width="52%"}
### Positive
- Make donations to neighbors
- Offer work to neighbors

:::

:::

::: aside
Work in progres with [Ines Fynn](https://uy.linkedin.com/in/ines-fynn-8b07733b), [Verónica Pérez Bentancur](https://cienciassociales.edu.uy/departamento-de-ciencia-politica/veronica-perez-bentancur/), and [Lucía Tiscornia](https://www.luciatiscornia.com/)
:::

## Survey {visibility="uncounted"}

- Facebook sample of Montevideo residents `(N = 2688)`

- Four criminal governance strategies

::: columns

::: {.column width="48%"}
### Negative
- [**Threaten neighbors**]{style="color: red;"}
- [Evict neighbors]{style="color: gray;"}
:::

::: {.column width="52%"}
### Positive
- [Make donations to neighbors]{style="color: gray;"}
- [Offer work to neighbors]{style="color: gray;"}


:::

:::

::: aside
Work in progres with [Ines Fynn](https://uy.linkedin.com/in/ines-fynn-8b07733b), [Verónica Pérez Bentancur](https://cienciassociales.edu.uy/departamento-de-ciencia-politica/veronica-perez-bentancur/), and [Lucía Tiscornia](https://www.luciatiscornia.com/)
:::

## DLE with placebo item

Things people have experienced in the last six months:

```{r}
list0 = tribble(
  ~A, ~B,
  "Saw people doing sports", "Saw people playing soccer",
  "Visited friends", "Chatted with friends",
  "Activities by feminist groups", "Activities by LGBTQ groups",
  "Went to church", "Went to charity events",
  "", ""
)

list0 %>% 
  kbl(col.names = c("List A", "List B"))
```


## DLE with placebo item {visibility="uncounted"}

Things people have experienced in the last six months:

```{r}
list2 = tribble(
  ~A, ~B,
  "Saw people doing sports", "Saw people playing soccer",
  "Visited friends", "Chatted with friends",
  "Activities by feminist groups", "Activities by LGBTQ groups",
  "Went to church", "Went to charity events",
  "Gangs threatening neighbors", "Did not drink mate"
)

list2 %>% 
  kbl(col.names = c("List A", "List B")) %>% 
  column_spec(2, italic = c(rep(F, 4), T)) %>%
  column_spec(1, bold = c(rep(F, 4), T))
```

## DLE with placebo item {visibility="uncounted"}

Things people have experienced in the last six months:

```{r}
list1 = tribble(
  ~A, ~B,
  "Saw people doing sports", "Saw people playing soccer",
  "Visited friends", "Chatted with friends",
  "Activities by feminist groups", "Activities by LGBTQ groups",
  "Went to church", "Went to charity events",
  "Did not drink mate", "Gangs threatening neighbors"
)

list1 %>% 
  kbl(col.names = c("List A", "List B")) %>% 
  column_spec(1, italic = c(rep(F, 4), T)) %>%
  column_spec(2, bold = c(rep(F, 4), T))
```

## Prevalence estimates

```{r}
# List and direct estimates already here
load("list/prevalence_estimates.RData")

prev_df = prev_estimates %>% 
  filter(estimator == "Direct" | estimator == "List") %>% 
  mutate(list_treatment = recode(list_treatment,
                                 "desalojar" = "Evict",
                                 "amenazar" = "Threaten",
                                 "donar" = "Donate",
                                 "trabajo" = "Offer work"))

# But also need DLE estimate
load("list/crime_uruguay.RData")

# need a response id
cu$id = 1:nrow(cu)

cu = cu %>% relocate(id)

# Recode treatments
cu$list_treatment = recode(
  cu$list_treatment,
  T1 = "Evict",
  T2 = "Threaten",
  T3 = "Donate",
  T4 = "Offer work"
)

# Make long version of the data
cu_long = cu %>% 
  select(id, block, list_treatment, list_location, list_order, count_a, count_b, 
         direct_job, direct_donation, direct_threat, direct_evict) %>% 
  pivot_longer(cols = c(count_a, count_b)) %>% 
  rename(list = name, count = value) %>% 
  mutate(
    Z = ifelse(
      list_location == "A" & list == "count_a" |
        list_location == "B" & list == "count_b",
      1, 0),
    direct_job = ifelse(direct_job == "Si", 1, 0),
    direct_donation = ifelse(direct_donation == "Si", 1, 0),
    direct_threat = ifelse(direct_threat == "Si", 1, 0),
    direct_evict = ifelse(direct_evict == "Si", 1, 0)
  ) 

# Estimate
dle_df = cu_long %>% 
  split(.$list_treatment) %>% 
  map(~lm_robust(count ~ Z + list,
                fixed_effects = block,
                clusters = id,
                se_type = "stata",
                data = .)) %>% 
  map(tidy) %>% 
  bind_rows(.id = "list_treatment") %>%
  filter(term == "Z") %>% 
  mutate(estimator = "DLE")

cu_df = bind_rows(prev_df, dle_df) %>% 
  mutate(estimator = case_when(
    estimator == "List" & list == "count_a" ~ "List A",
    estimator == "List" & list == "count_b" ~ "List B",
    .default = estimator
  ))

# reorder factors before plotting
cu_df$estimator = fct_relevel(cu_df$estimator,
                              "Direct", "List A",
                              "List B", "DLE")

cu_df$list_treatment = fct_relevel(cu_df$list_treatment,
                                   "Threaten", "Evict",
                                   "Donate", "Offer work")
```

```{r}
ggplot(cu_df %>% filter(list_treatment == "Threaten")) +
  aes(x = estimator, y = estimate) +
  ylim(-0.4, 0.4) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_point(size = 4, alpha = 0) +
  geom_linerange(aes(x = estimator, ymin = conf.low, ymax = conf.high),
                 linewidth = 1, alpha = 0) +
  labs(x = "Estimator",
       y = "Proportion saw gangs\nthreatening neighbors")
```

## Prevalence estimates {visibility="uncounted"}

```{r}
ggplot(cu_df %>% filter(list_treatment == "Threaten")) +
  aes(x = estimator, y = estimate) +
  ylim(-0.4, 0.4) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_point(size = 4, alpha = c(1, rep(0, 3))) +
  geom_linerange(aes(x = estimator, ymin = conf.low, ymax = conf.high),
                 linewidth = 1, alpha = c(1, rep(0, 3))) +
  labs(x = "Estimator",
       y = "Proportion saw gangs\nthreatening neighbors")
```

## Prevalence estimates {visibility="uncounted"}

```{r}
ggplot(cu_df %>% filter(list_treatment == "Threaten")) +
  aes(x = estimator, y = estimate) +
  ylim(-0.4, 0.4) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_point(size = 4) +
  geom_linerange(aes(x = estimator, ymin = conf.low, ymax = conf.high),
                 linewidth = 1) +
  labs(x = "Estimator",
       y = "Proportion saw gangs\nthreatening neighbors")
```

## Same for the other sensitive items!

```{r}
ggplot(cu_df %>% filter(list_treatment != "Threaten")) +
  aes(x = estimator, y = estimate) +
  ylim(-0.4, 0.4) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_point(size = 4) +
  geom_linerange(aes(x = estimator, ymin = conf.low, ymax = conf.high),
                 linewidth = 1) +
  facet_grid(~list_treatment) +
  labs(x = "Estimator",
       y = "Proportion")
```

## What went wrong?

::: incremental

- Placebo item more frequent than we anticipated

- Offsets prevalence rates we would have observed

- **Solution:** Reconstruct estimate bounds without placebo item

<!-- Think of how response patterns suggest we need DLE tests -->
- **Problem:** Respondents may have noticed sensitive item and altered responses in unintended ways

- **Goal:** Rule out *strategic errors*

:::

## Assumptions

. . .

Standard [(Blair and Imai 2012)](https://doi.org/10.1093/pan/mpr048):

- No liars (*one-sided lying*)

- No design effects

## Assumptions {visibility="uncounted"}

Standard [(Blair and Imai 2012)](https://doi.org/10.1093/pan/mpr048):

- **No liars (*one-sided lying*)**

- No design effects


## Assumptions {visibility="uncounted"}

Standard [(Blair and Imai 2012)](https://doi.org/10.1093/pan/mpr048):

- **No liars (*one-sided lying*)** {{< fa circle-check >}} 

- No design effects

## Assumptions {visibility="uncounted"}

Standard [(Blair and Imai 2012)](https://doi.org/10.1093/pan/mpr048):

- **No liars (*one-sided lying*)** {{< fa circle-check >}} 

- **No design effects**



## Applying difference-in-differences test

<!-- Include Aronow et al placebo tests in appendix -->

```{r}
tab = read.csv("list/dle_tests.csv")

tab %>% 
   mutate(list_treatment = recode(list_treatment,
                                 "desalojar" = "Evict neighbors",
                                 "amenazar" = "Threaten neighbors",
                                 "donar" = "Make donations",
                                 "trabajo" = "Offer work")) %>% 
  kbl(digits = 2,
      col.names = c("Sensitive item", "Statistic", "p-value")) %>% 
  column_spec(2:3, color = "white")
```

## Applying difference-in-differences test {visibility="uncounted"}

```{r}
tab %>% 
   mutate(list_treatment = recode(list_treatment,
                                 "desalojar" = "Evict neighbors",
                                 "amenazar" = "Threaten neighbors",
                                 "donar" = "Make donations",
                                 "trabajo" = "Offer work")) %>% 
  kbl(digits = 2,
      col.names = c("Sensitive item", "Statistic", "p-value"))
```

## Assumptions {visibility="uncounted"}

Standard [(Blair and Imai 2012)](https://doi.org/10.1093/pan/mpr048):

- **No liars (*one-sided lying*)** {{< fa circle-check >}} 

- **No design effects** {{< fa circle-check >}}  

. . .

- **Implications:**

    - Control responses *never* increase
    - Control response = 5 {{< fa arrow-right >}} *always* decrease by one
    - Control response = 0 {{< fa arrow-right >}}  *never* change



## Assumptions {visibility="uncounted"}

Standard [(Blair and Imai 2012)](https://doi.org/10.1093/pan/mpr048):

- **No liars (*one-sided lying*)** {{< fa circle-check >}} 

- **No design effects** {{< fa circle-check >}} 

. . .

Additional:

. . .

- **Known placebo proportion**

## Assumptions {visibility="uncounted"}

Standard [(Blair and Imai 2012)](https://doi.org/10.1093/pan/mpr048):

- **No liars (*one-sided lying*)** {{< fa circle-check >}} 

- **No design effects** {{< fa circle-check >}}    

Additional:

- **Known placebo proportion**
    
    - No survey question {{< fa circle-xmark >}}
    
## Assumptions {visibility="uncounted"}

Standard [(Blair and Imai 2012)](https://doi.org/10.1093/pan/mpr048):

- **No liars (*one-sided lying*)** {{< fa circle-check >}} 

- **No design effects** {{< fa circle-check >}}    

Additional:

- **Known placebo proportion**
    
    - No survey question {{< fa circle-xmark >}}
    - No auxiliary information {{< fa circle-xmark >}}
    
## Assumptions {visibility="uncounted"}

Standard [(Blair and Imai 2012)](https://doi.org/10.1093/pan/mpr048):

- **No liars (*one-sided lying*)** {{< fa circle-check >}} 

- **No design effects** {{< fa circle-check >}}    

Additional:

- **Known placebo proportion**
    
    - No survey question {{< fa circle-xmark >}}
    - No auxiliary information {{< fa circle-xmark >}}
    - **Construct bounds at different hypothetical values**
    
## DLE Estimate bounds

```{r}
sims = read.csv("list/sim_placebo.csv")

bounds = sims %>% 
  filter(list_treatment == "amenazar" & list == "double") %>% 
  group_by(pi) %>% 
  summarize(lo = min(estimate),
            hi = max(estimate))
```

```{r}
 direct = cu_df %>% 
    filter(estimator == "Direct" &
             list_treatment == "Threaten") %>% 
    .$estimate

ggplot(bounds) +
  aes(x = pi, y = hi) +
  geom_line(linewidth = 1, alpha = 0) +
  geom_line(aes(y = lo), linewidth = 1, alpha = 0) +
  geom_hline(yintercept = direct, linetype = "dashed", alpha = 0) +
  geom_vline(xintercept = 0.5, linetype = "dashed", alpha = 0) +
  annotate("text", x = 0.018, y = direct + 0.03, label = "Direct question", alpha = 0) +
  annotate("text", x = 0.58, y = 0.9, label = "Unrealistic", alpha = 0) +
  labs(x = "Proportion holding placebo",
       y = "Estimated proportion saw \n gangs threatening neighbors")
  
```

## DLE Estimate bounds {visibility="uncounted"}

```{r}
ggplot(bounds) +
  aes(x = pi, y = hi) +
  geom_line(linewidth = 1, alpha = 0) +
  geom_line(aes(y = lo), linewidth = 1, alpha = 0) +
  geom_hline(yintercept = direct, linetype = "dashed") +
  geom_vline(xintercept = 0.5, linetype = "dashed") +
  annotate("text", x = 0.018, y = direct + 0.03, label = "Direct question") +
  annotate("text", x = 0.56, y = 0.9, label = "Unrealistic") +
  labs(x = "Proportion holding placebo",
       y = "Estimated proportion saw \n gangs threatening neighbors")
```

## DLE Estimate bounds {visibility="uncounted"}

```{r}
ggplot(bounds) +
  aes(x = pi, y = hi) +
  geom_line(linewidth = 1) +
  geom_line(aes(y = lo), linewidth = 1) +
  geom_hline(yintercept = direct, linetype = "dashed") +
  geom_vline(xintercept = 0.5, linetype = "dashed") +
  annotate("text", x = 0.018, y = direct + 0.03, label = "Direct question") +
  annotate("text", x = 0.56, y = 0.9, label = "Unrealistic") +
  labs(x = "Proportion holding placebo",
       y = "Estimated proportion saw \n gangs threatening neighbors")
```

## Conclusion

### Summary

::: incremental
- DLEs improve along bias-variance frontier
- But bring additional questions about validity
- New tools to address validity
- Applications: Justify research design and recover estimates
:::

::: aside
**Learn more:** [gustavodiaz.org](https://gustavodiaz.org/)
:::

## Conclusion {visibility="uncounted"}

### Lessons

::: incremental
- Don't give up!
- Pilot, pilot, pilot
- Ask the same question in multiple ways
- Combine different questions to improve estimates
- Make adaptive rules before looking at results
:::

::: aside
**Learn more:** [gustavodiaz.org](https://gustavodiaz.org/)
:::



## Appendix {#appendix background-color="#1d428a" visibility="uncounted"}
<!-- Show some of the network scale up stuff in case they question bounds -->

- [Alvarez et al (2019) details](#cali)
- [Montevideo survey responses](#mvd)
- [Signed rank test](#steph)
- [DLE cost simulations](#cost)
- [Performance simulations](#performance)
- [Placebo tests](#placebo)
- [Network scale-up](#nsum)

## [Alvarez et al (2019)](https://doi.org/10.1017/pan.2018.57) details {#cali visibility="uncounted"}

```{r}
load("list/attn_design_tab.RData")

design_tab %>% 
  kbl() %>% 
  add_header_above(c("", "Placement" = 2)) %>% 
  pack_rows("Sensitive item", 1, 2)
```

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Mean supported organizations {visibility="uncounted"}

![](list/attn_means.png)

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Control list distributions {visibility="uncounted"}

![](list/attn_control.png){fig-align="center" width="60%" height="60%"}


::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Montevideo survey {#mvd visibility="uncounted"}

```{r}
all_df = cu %>% 
  select(id, list_treatment, list_location, list_order, count_a, count_b) %>% 
  pivot_longer(cols = c(count_a, count_b)) %>% 
  rename(list = name, count = value) %>% 
  mutate(
    Z = ifelse(
      list_location == "A" & list == "count_a" |
        list_location == "B" & list == "count_b", 
      1, 0
    )) %>% 
  group_by(list_treatment, list, Z, count) %>%
  tally() %>% 
  mutate(
    list = ifelse(list == "count_a", "List A", "List B"),
    Z = ifelse(Z == 0, "Control", "Treatment"),
    tool = ifelse(list_treatment == "Threaten" | list_treatment == "Evict",
                  "negative", "positive")
  )


all_df$list_treatment = fct_relevel(all_df$list_treatment,
                                    "Threaten", "Evict", "Donate", "Offer work")

# visualize
ggplot(all_df %>% filter(list_treatment == "Threaten")) +
  aes(x = as.factor(count), y = n) +
  geom_col() +
  facet_nested_wrap(~ list_treatment + list + Z, nrow = 1) +
  labs(x = "Response", y = "Count")
```

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Montevideo survey {visibility="uncounted"}

```{r}
ggplot(all_df %>% filter(list_treatment == "Evict")) +
  aes(x = as.factor(count), y = n) +
  geom_col() +
  facet_nested_wrap(~ list_treatment + list + Z, nrow = 1) +
  labs(x = "Response", y = "Count")
```

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Montevideo survey {visibility="uncounted"}

```{r}
ggplot(all_df %>% filter(list_treatment == "Donate")) +
  aes(x = as.factor(count), y = n) +
  geom_col() +
  facet_nested_wrap(~ list_treatment + list + Z, nrow = 1) +
  labs(x = "Response", y = "Count")
```

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Montevideo survey {visibility="uncounted"}

```{r}
ggplot(all_df %>% filter(list_treatment == "Offer work")) +
  aes(x = as.factor(count), y = n) +
  geom_col() +
  facet_nested_wrap(~ list_treatment + list + Z, nrow = 1) +
  labs(x = "Response", y = "Count")
```

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Stephenson's signed rank test {#steph visibility="uncounted"}

$$
\widetilde{T} = \sum_{i=1}^N \text{sgn} \{(z_i - (1-z_i)) (Y_{i1} - Y_{i2})\} \times \tilde{q}_i
$$


$$
\tilde{q}_i = {q_i-1 \choose m-1} \text{ for } q_i \geq m 
$$

$$
\tilde{q}_i = 0 \text{ for } q_i < m 
$$

$$
\text{with } 1 \leq m \leq N
$$

::: aside
[{{< fa rotate-left >}}](#appendix) See [Stephenson (1981)](https://doi.org/10.1080/01621459.1981.10477749) and [Rosenbaum (2020)](https://mitpressbookstore.mit.edu/book/9783030464042) for details
:::

## Applied to [Alvarez et al (2019)](https://doi.org/10.1017/pan.2018.57) {visibility="uncounted"}

```{r}
st = attn_tests %>% 
  filter(!is.na(m)) %>% 
  arrange(by = experiment) %>% 
  select(experiment, m, statistic, p.value)

st_tab = merge(
  st %>% filter(experiment == "X") %>% select(!experiment),
  st %>% filter(experiment == "Y") %>% select(!experiment),
  by = "m"
)

colnames(st_tab) = c("m", "Statistic", "p-value", "Statistic", "p-value")

st_tab %>% 
  kbl(digits = 2,
      escape = FALSE) %>% 
  add_header_above(c(" ", "Organization X" = 2, "Organization Y" = 2))
```


::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## DLEs are costly to implement {#cost visibility="uncounted"}

![](list/dle_cost.png){fig-align="center" width="90%" height="90%"}

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Test performance {#performance visibility="uncounted"}

![](list/dle_power.png){fig-align="center" width="90%" height="90%"}

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Signed rank performance {visibility="uncounted"}

![](list/dle_power_steph.png){fig-align="center" width="90%" height="90%"}

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Placebo tests {#placebo visibility="uncounted"}

```{r}
## PLACEBO I
# Beta: Treatment effect among those admitting to direct question
# I think because we have a placebo item the bar is now
# beta = 0
## PLACEBO II
## Delta:  Effect of list experiment assignment on direct question
placebo = read.csv("list/placebo_tests.csv")

placebo = placebo %>% 
  filter(test == "beta" & list == "double" | test == "delta" & list == "count_a") %>% 
  mutate(test = ifelse(test == "beta", "Placebo I", "Placebo II"),
         list_treatment = recode(list_treatment,
                                 "amenazar" = "Threaten",
                                 "desalojar" = "Evict",
                                 "donar" = "Donate",
                                 "trabajo" = "Work")) %>% 
  select(test, list_treatment, estimate, p.value, n) 

  
placebo_tab = merge(
  placebo %>% filter(test == "Placebo I") %>% select(!test),
  placebo %>% filter(test == "Placebo II") %>% select(!test),
  by = "list_treatment"
)
  
placebo_tab %>% 
  kbl(digits = 2,
      col.names = c("Item", "Estimate", "p", "n",
                    "Estimate", "p", "n")) %>% 
  add_header_above(c("", "Placebo I" = 3, "Placebo II" = 3))
```


::: aside
[{{< fa rotate-left >}}](#appendix) See [Aronow et al (2015)](https://doi.org/10.1093/jssam/smu023) for details
:::

## Network scale-up method {#nsum visibility="uncounted"}

. . .

**How many X do you know,**

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Network scale-up method {visibility="uncounted"}

**How many X do you know, who also know you,**

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Network scale-up method {visibility="uncounted"}

**How many X do you know, who also know you, with whom you have interacted in the last year**

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Network scale-up method {visibility="uncounted"}

**How many X do you know, who also know you, with whom you have interacted in the last year in person, by phone, or any other channel?**

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## Network scale-up method {visibility="uncounted"}

**How many X do you know... **

. . .

::: columns

::: {.column width="45%"}
From *Las Piedras*  
Male 25-29  
Police officers  
University students  
Had a kid last year  
Passed away last year  
Married last year  
Female 45-49
:::

::: {.column width="55%"}
Public employees  
Welfare card holders  
Registered with party  
With kids in public school  
Did not vote in last election  
Currently in jail  
Recently unemployed  
*[ SENSITIVE ITEM ]*
:::

:::

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

## NSUM results {visibility="uncounted"}

![](list/nsum_results.png){fig-align="center" width="90%" height="90%"}

::: aside
[{{< fa rotate-left >}}](#appendix)
:::

